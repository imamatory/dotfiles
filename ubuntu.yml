---
- hosts: all

  vars:
    config: ~/.bashrc
    git_user: imamatory
    git_email: imamatory@gmail.com
    term: xterm-kitty

  tasks:
    - name: Upgrade all packages to the latest version
      become: yes
      apt:
        name: "*"
        state: latest
        update_cache: yes
        force_apt_get: True

    - name: Install locales
      become: yes
      apt:
        name: locales
        state: latest
        install_recommends: false

    - name: Gen locale
      become: yes
      shell: locale-gen en_US.UTF-8

    - name: Install base packages
      become: yes
      apt:
        state: latest
        install_recommends: false
        name:
          - sudo
          - libfontconfig
          - ca-certificates
          - git
          - curl
          - wget
          - make
          - cmake
          - sudo
          - inotify-tools
          - openssl
          - openssh-client
          - cargo
          - xz-utils
          - libfontconfig
          - python

    # - name: Install docker
    #   shell: 'curl -fsSL get.docker.com | sh'
    #   args:
    #     creates: /usr/bin/docker

    - name: Install exa
      shell: 'cargo install --force exa'
      args:
        creates: ~/.cargo/bin/exa

    - name: Install dev packages
      become: yes
      apt:
        state: latest
        install_recommends: false
        name:
          - tig
          - ruby
          - ruby-dev
          - nodejs
          - neovim
          - docker-compose
          - tmux
          - zsh
          - jq
          - xclip

    - name: Install kitty-terminfo
      become: yes
      apt:
        deb: "http://ftp.de.debian.org/debian/pool/main/k/kitty/kitty-terminfo_{{ version }}_all.deb"
      vars:
        version: 0.13.3-1

    - name: Install repgrep
      become: yes
      apt:
        deb: "https://github.com/BurntSushi/ripgrep/releases/download/{{ version }}/ripgrep_{{ version }}_amd64.deb"
      vars:
        version: 0.10.0

    - name: Install bat
      become: yes
      apt:
        deb: "https://github.com/sharkdp/bat/releases/download/v{{ version }}/bat_{{ version }}_amd64.deb"
      vars:
        version: 0.10.0

    - name: Install antibody
      become: yes
      shell: 'curl -sSL git.io/antibody | bash -s'
      args:
        creates: /usr/local/bin/antibody

    - name: Install fzf
      become: yes
      shell: |
        git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf \
        && ~/.fzf/install --key-bindings --update-rc --completion \
        && cp ~/.fzf/bin/fzf /usr/local/bin
      args:
        creates: /usr/local/bin/fzf
      environment:
        TERM: "{{ term }}"

    - name: Install oh-my-zsh
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: ~/.oh-my-zsh/

    - name: Set env vars
      lineinfile:
        dest: "{{ config }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { line: 'export PATH=$PATH:~/.cargo/bin' }

    - name: Setup git
      shell: |
        git config --global user.name {{ git_user }}
        git config --global user.email {{ git_email }}
        git config --global credential.helper cache

    - name: Setup shell
      become: yes
      shell: "chsh $USER -s $(which zsh);"
